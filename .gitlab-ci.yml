stages:
  - build
  - deploy-dev
  - deploy-prod

build:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: build
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --no-push
  except:
    - develop

build-develop:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: build
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  only:
    - develop


deploy-dev:
  image:
    name: dtzar/helm-kubectl:3.0.1
  stage: deploy-dev
  environment:
    name: dev
    url: https://api.dev.pizza-cheeser.psota.pl
  script:
    - cd charts/backend-pizza-cheeser
    - helm dependency update
    - helm upgrade --install backend-dev --timeout=3600s --namespace pizzacheeser --set image.tag="$CI_COMMIT_SHORT_SHA" --set ingress.host="api.dev.pizza-cheeser.psota.pl" --set elasticsearch.clusterName="pizza-cheeser-dev" --set scraper.schedule="5 4 * * */5" --set sentry.environment="$CI_ENVIRONMENT_SLUG" --set sentry.dsn="$SENTRY_DSN" --set ui.baseURL="https://dev.pizza-cheeser.psota.pl/" .
  only:
    - develop

deploy-prod:
  image:
    name: dtzar/helm-kubectl:3.0.1
  stage: deploy-prod
  environment:
    name: prod
    url: https://api.pizza-cheeser.psota.pl
  script:
    - cd charts/backend-pizza-cheeser
    - helm dependency update
    - helm upgrade --install backend --timeout=3600s --namespace pizzacheeser --set image.tag="$CI_COMMIT_SHORT_SHA" --set sentry.dsn="$SENTRY_DSN" --set sentry.environment="$CI_ENVIRONMENT_SLUG" .
  when: manual
  only:
    - develop


